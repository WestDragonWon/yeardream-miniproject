apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-webserver
  template:
    metadata:
      labels:
        app: airflow-webserver
    spec:
      nodeSelector:
        type: worker
      initContainers:
        - name: initialize-airflow-db
          image: westdragonwon/airflow-rsync:latest
          command: ["airflow", "db", "init"]
          env:
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              valueFrom:
                configMapKeyRef:
                  name: airflow-config
                  key: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
      containers:
        - name: airflow-webserver
          image: westdragonwon/airflow-rsync:latest  # 커스텀 이미지를 사용
          ports:
            - containerPort: 8080
          command: ["/bin/bash", "-c", "airflow webserver"]
          env:
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              valueFrom:
                configMapKeyRef:
                  name: airflow-config
                  key: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
            - name: AIRFLOW__CORE__DEFAULT_TIMEZONE  # Airflow에서 사용하는 시간대를 설정
              value: Asia/Seoul
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: workflow
                  key: AWS_ACCESS_KEY_ID
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: workflow
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: workflow
                  key: POSTGRES_PASSWORD
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: workflow
                  key: AWS_SECRET_ACCESS_KEY
          volumeMounts:
            - name: airflow-logs
              mountPath: /opt/airflow/logs
            - name: airflow-dags
              mountPath: /opt/airflow/dags
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 5
      volumes:
        - name: airflow-logs
          persistentVolumeClaim:
            claimName: airflow-logs-pvc
        - name: airflow-dags
          persistentVolumeClaim:
            claimName: airflow-dags-pvc
