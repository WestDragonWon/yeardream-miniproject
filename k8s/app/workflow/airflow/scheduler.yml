apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-scheduler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-scheduler
  template:
    metadata:
      labels:
        app: airflow-scheduler
    spec:
      serviceAccountName: airflow
      nodeSelector:
        type: worker
      initContainers:
        - name: initialize-airflow-db
          image: westdragonwon/airflow-rsync:latest 
          command: ["airflow", "db", "init"]
          env:
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              valueFrom:
                configMapKeyRef:
                  name: airflow-config
                  key: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
      tolerations:                # 여기 tolerations 추가
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 30
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 30
      containers:
        - name: airflow-scheduler
          image: westdragonwon/airflow-rsync:latest
          command: ["airflow", "scheduler"]
          env:
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              valueFrom:
                configMapKeyRef:
                  name: airflow-config
                  key: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
            - name: AIRFLOW__CORE__DEFAULT_TIMEZONE
              valueFrom:
                configMapKeyRef:
                  name: airflow-config
                  key: AIRFLOW__CORE__DEFAULT_TIMEZONE
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: workflow
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: workflow
                  key: AWS_SECRET_ACCESS_KEY
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: workflow
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: workflow
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: workflow
                  key: POSTGRES_HOST
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: workflow
                  key: POSTGRES_PORT
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: workflow
                  key: POSTGRES_DB
            - name: POSTGRES_TABLE
              valueFrom:
                secretKeyRef:
                  name: workflow
                  key: POSTGRES_TABLE
          volumeMounts:
            - name: airflow-logs
              mountPath: /opt/airflow/logs
            - name: airflow-dags
              mountPath: /opt/airflow/dags
          readinessProbe:
            exec:
              command: ["airflow", "jobs", "check", "--job-type", "SchedulerJob"]
            initialDelaySeconds: 60
            periodSeconds: 20
            timeoutSeconds: 30
          livenessProbe:
            exec:
              command: ["airflow", "jobs", "check", "--job-type", "SchedulerJob"]
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
      volumes:
        - name: airflow-logs
          persistentVolumeClaim:
            claimName: airflow-logs-pvc
        - name: airflow-dags
          persistentVolumeClaim:
            claimName: airflow-dags-pvc
