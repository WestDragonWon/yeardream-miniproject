apiVersion: apps/v1
kind: Deployment
metadata:
  name: spark-worker-deployment
  labels:
    app: spark
spec:
  replicas: 3
  selector:
    matchLabels:
      app: spark
      role: worker
  template:
    metadata:
      labels:
        app: spark
        role: worker
    spec:
      serviceAccountName: spark  # ServiceAccount를 지정
      containers:
      - name: spark-worker-container
        image: apache/spark:3.5.1
        ports:
        - containerPort: 8081
        env:
        - name: SPARK_MODE
          value: "worker"
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: workflow
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: workflow
              key: AWS_SECRET_ACCESS_KEY
        - name: POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: workflow
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: workflow
              key: POSTGRES_PASSWORD
        - name: SPARK_LOCAL_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        command: ["/opt/spark/bin/spark-class", "org.apache.spark.deploy.worker.Worker"]
        args: ["spark://spark-master-service:7077", "--host", "$(SPARK_LOCAL_IP)", "--webui-port", "8081"]
        volumeMounts:
          #- name: spark-jars-volume
          #mountPath: /opt/spark/jars
        - name: spark-jobs-volume
          mountPath: /opt/spark/work-dir
        resources:
          requests:
            cpu: "1"
            memory: "5Gi"
          limits:
            cpu: "1"
            memory: "5Gi"
      volumes:
        #- name: spark-jars-volume
        #persistentVolumeClaim:
        #  claimName: spark-jars-pvc
      - name: spark-jobs-volume
        persistentVolumeClaim:
          claimName: spark-jobs-pvc
      nodeSelector:
        type: worker

---
apiVersion: v1
kind: Service
metadata:
  name: spark-worker-service
  labels:
    app: spark
spec:
  type: NodePort
  ports:
  - name: spark-worker-ui
    port: 8081
    targetPort: 8081
    nodePort: 32081
  selector:
    app: spark
    role: worker
