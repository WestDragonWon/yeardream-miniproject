apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  serviceName: kafka
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      nodeSelector:
        type: worker
      containers:
      - name: kafka
        image: apache/kafka:3.7.1
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_PROCESS_ROLES
          value: "broker,controller"
        - name: KAFKA_NODE_ID
          value: "0"  # 브로커 0의 Node ID
        - name: KAFKA_CONTROLLER_QUORUM_VOTERS
          value: "0@kafka-0.kafka:9093"
        - name: KAFKA_LISTENERS
          value: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka-0.kafka:9092"
        - name: KAFKA_LOG_DIRS
          value: "/var/lib/kafka/data"
        - name: KAFKA_METADATA_LOG_DIR
          value: "/var/lib/kafka/metadata"  # 메타데이터 로그 디렉토리
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: "PLAINTEXT"
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: "false"
        - name: KAFKA_CONTROLLER_LISTENER_NAMES
          value: "CONTROLLER"
        - name: KAFKA_LOG_RETENTION_MS
          value: "604800000"
        - name: KAFKA_MESSAGE_MAX_BYTES
          value: "10485760"  
        - name: KAFKA_REPLICA_FETCH_MAX_BYTES
          value: "10485760"  
        - name: KAFKA_MAX_PARTITION_FETCH_MAX_BYTES
          value: "10485760"     
        volumeMounts:
        - name: kafka-storage
          mountPath: /var/lib/kafka/data
        - name: kafka-metadata-storage
          mountPath: /var/lib/kafka/metadata  # 메타데이터 저장소

  volumeClaimTemplates:
  - metadata:
      name: kafka-storage
    spec:
      accessModes: 
        - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
      storageClassName: ebs-gp3

  - metadata:
      name: kafka-metadata-storage
    spec:
      accessModes: 
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: ebs-gp3

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-1
spec:
  serviceName: kafka-1
  replicas: 1
  selector:
    matchLabels:
      app: kafka-1
  template:
    metadata:
      labels:
        app: kafka-1
    spec:
      nodeSelector:
        type: worker
      containers:
      - name: kafka
        image: apache/kafka:3.7.1
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_PROCESS_ROLES
          value: "broker,controller"
        - name: KAFKA_NODE_ID
          value: "1"  # 브로커 1의 Node ID
        - name: KAFKA_CONTROLLER_QUORUM_VOTERS
          value: "0@kafka-0.kafka:9093,1@kafka-1.kafka:9093"
        - name: KAFKA_LISTENERS
          value: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka-1.kafka:9092"
        - name: KAFKA_LOG_DIRS
          value: "/var/lib/kafka/data"
        - name: KAFKA_METADATA_LOG_DIR
          value: "/var/lib/kafka/metadata"  # 메타데이터 로그 디렉토리
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: "PLAINTEXT"
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: "false"
        - name: KAFKA_CONTROLLER_LISTENER_NAMES
          value: "CONTROLLER"
        - name: KAFKA_LOG_RETENTION_MS
          value: "604800000"
        - name: KAFKA_MESSAGE_MAX_BYTES
          value: "10485760"  
        - name: KAFKA_REPLICA_FETCH_MAX_BYTES
          value: "10485760"  
        - name: KAFKA_MAX_PARTITION_FETCH_MAX_BYTES
          value: "10485760"     
        volumeMounts:
        - name: kafka-storage
          mountPath: /var/lib/kafka/data
        - name: kafka-metadata-storage
          mountPath: /var/lib/kafka/metadata  # 메타데이터 저장소

  volumeClaimTemplates:
  - metadata:
      name: kafka-storage
    spec:
      accessModes: 
        - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
      storageClassName: ebs-gp3

  - metadata:
      name: kafka-metadata-storage
    spec:
      accessModes: 
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: ebs-gp3

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-2
spec:
  serviceName: kafka-2
  replicas: 1
  selector:
    matchLabels:
      app: kafka-2
  template:
    metadata:
      labels:
        app: kafka-2
    spec:
      nodeSelector:
        type: worker
      containers:
      - name: kafka
        image: apache/kafka:3.7.1
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_PROCESS_ROLES
          value: "broker,controller"
        - name: KAFKA_NODE_ID
          value: "2"  # 브로커 2의 Node ID
        - name: KAFKA_CONTROLLER_QUORUM_VOTERS
          value: "0@kafka-0.kafka:9093,1@kafka-1.kafka:9093,2@kafka-2.kafka:9093"
        - name: KAFKA_LISTENERS
          value: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka-2.kafka:9092"
        - name: KAFKA_LOG_DIRS
          value: "/var/lib/kafka/data"
        - name: KAFKA_METADATA_LOG_DIR
          value: "/var/lib/kafka/metadata"  # 메타데이터 로그 디렉토리
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: "PLAINTEXT"
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: "false"
        - name: KAFKA_CONTROLLER_LISTENER_NAMES
          value: "CONTROLLER"
        - name: KAFKA_LOG_RETENTION_MS
          value: "604800000"
        - name: KAFKA_MESSAGE_MAX_BYTES
          value: "10485760"  
        - name: KAFKA_REPLICA_FETCH_MAX_BYTES
          value: "10485760"  
        - name: KAFKA_MAX_PARTITION_FETCH_MAX_BYTES
          value: "10485760"     
        volumeMounts:
        - name: kafka-storage
          mountPath: /var/lib/kafka/data
        - name: kafka-metadata-storage
          mountPath: /var/lib/kafka/metadata  # 메타데이터 저장소

---
apiVersion: v1
kind: Service
metadata:
  name: kafka
spec:
  ports:
  - name: plaintext
    port: 9092
    targetPort: 9092
    protocol: TCP
  - name: controller
    port: 9093
    targetPort: 9093
    protocol: TCP
  selector:
    app: kafka
