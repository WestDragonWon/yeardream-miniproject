---
apiVersion: apps/v1 # Kubernetes apps API 버전 지정
kind: StatefulSet # 이 리소스가 StatefulSet임을 명시 * Deployment가 아닌 Statefulset을 사용하는 이유는 모든 복제본에 대한 볼륨을 생성 * 데이터 백업에서 중요한 기능이라고 생각됨.. 사견임
metadata:
  name: postgres # StatefulSet의 이름 지정
spec:
  serviceName: "postgres" # 연관된 서비스 이름 지정
  replicas: 1 # Pod 복제본 수를 2개로 설정 () *-0.-1로 복제. 각각 pod 구성 후 복제 정상 작동 여부 시도시 postgre 강제 종료 및 CrashloopBackoff 발생. 데이터 초기화 불가능으로 POD 초기화함.
  selector:
    matchLabels:
      app: postgres # 이 라벨을 가진 Pod 선택
  template:
    metadata:
      labels:
        app: postgres # Pod에 적용할 라벨 지정
    spec:
      securityContext:
        fsGroup: 999
        runAsUser: 999
      containers:
        - name: postgres # 컨테이너 이름 지정
          image: postgres:13 # PostgreSQL 13 버전 이미지 사용 * latest 또는 중간 것 사용?
          #command: ["postgres"]
          #env:
          #  - name: PGDATA
          #    value: /var/lib/postgresql/data
          volumeMounts:
            - name: postgres-storage # 마운트할 볼륨 이름
              mountPath: /var/lib/postgresql/data #_temp # 컨테이너 내 마운트 경로 ★ 관련해서 이슈가 많았고 제대로 해결하지 못했다 .. 이게 뭐라고 ..
          ports:
            - containerPort: 5432 # PostgreSQL 기본 포트 노출
          envFrom:
            - secretRef:
                name: db # 'db'라는 이름의 Secret에서 환경 변수 가져오기 * 클러스터 구성 및 Postgre 접속시 여러 환경변수를 사용하니 이것 말도고 많이 필요한거같다. 
          resources:
            requests:
              cpu: 500m # 최소 0.5 CPU 코어 요청
              memory: 1Gi # 최소 1 기가바이트 메모리 요청
            limits:
              cpu: 1 # 최대 1 CPU 코어 사용 제한
              memory: 2Gi # 최대 2 기가바이트 메모리 사용 제한
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc-postgres-0
#  volumeClaimTemplates:
#    - metadata:
#        name: postgres-pvc-postgres-0
#      spec:
#        accessModes: [ "ReadWriteMany" ]
#        storageClassName: efs-sc
#        resources:
#          requests:
#            storage: 1Gi


#      - name: postgres-storage # 볼륨 이름 지정
#        persistentVolumeClaim:
#          claimName: postgres-pvc # 사용할 PVC 이름 지정
          
# PostgreSQL는 데이터 디렉토리가 비어있지 않으면 새로운 데이터 베이스 클러스터 초기화하지않음(일종의 안전장
# data_temp로 경로를 새로 지정하고 data 폴더 확인 결과 이미 초기화가 된 상태. 해당 디렉토리를 완전히 삭제
# 클러스터 구성 전 yaml로 백업 .. 경로 문제때문에 다시 안될 수 도 있다 .. 경로는 이전 사용 경로였는데 문제
# 일단 경로 data로 다시 지정해보고 클러스터 구성 시도 > data 쪽은 뭔가 막힌 듯 바로 crashloopbackoff 뜸 ..
# spec.persistentVolumeReclaimPolicy: Retain 이라서 기존 데이터때문에 초기화가 안되는건지? 권한문제? (EFS?
# 999라는 데이터폴더 생성 권한이 필요하다. data는 기본 경로 이므로..
---
apiVersion: v1 # Kubernetes API 버전 지정
kind: Service # 이 리소스가 Service임을 명시
metadata:
  name: postgres # 서비스 이름 지정
spec:
  selector:
    app: postgres # 이 라벨을 가진 Pod 선택
  ports:
    - protocol: TCP # TCP 프로토콜 사용
      port: 5432 # 서비스 포트
      targetPort: 5432 # 대상 Pod의 포트
  clusterIP: None  # Headless 서비스로 설정 (StatefulSet용) 각 데이터베이스 노드에 직접 접근해야하는 경우 사용한다고 함.
