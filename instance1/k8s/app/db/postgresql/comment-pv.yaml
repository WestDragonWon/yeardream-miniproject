apiVersion: v1 # Kubernetes API 버전 지정1
kind: PersistentVolume # 이 리소스가 PersistentVolume임을 명시
metadata:
  name: postgres-pv # PersistentVolume의 이름 지정
spec:
  capacity:
    storage: 1Gi # 스토리지 용량을 1 기가바이트로 설정
  volumeMode: Filesystem # 파일시스템 모드로 볼륨 사용 말그래도 모드를 설정하나봄 ..
  accessModes:
    - ReadWriteMany # 여러 노드에서 읽기/쓰기 가능하도록 설정 ReadWriteOnece는 하나에서만 가능하다. 다른 노드에서 접근이 불가능함. 동시 쓰기가 불가능.
  persistentVolumeReclaimPolicy: Retain # PV 삭제 시 데이터 유지 # Delete로 설정하면 데이터 삭제
  storageClassName: efs-sc # EFS 스토리지 클래스 사용
  claimRef:
    namespace: default
    name: postgres-pvc-postgres-0
  csi:
    driver: efs.csi.aws.com # AWS EFS CSI 드라이버 사용
    volumeHandle: fs-00fb81d888c7ed27c # 특정 EFS 볼륨 지정
    #AWS EFS CSI 드라이버에서 사용되는 EFS 파일 시스템 ID (여기서는 fs-00fb81d888c7ed27c)는 AWS 콘솔이나 AWS CLI를 통해 확인할 수 있다 > 일반 계정으로는 확인 불가능 한듯.
---
apiVersion: v1 # Kubernetes API 버전 지정
kind: PersistentVolumeClaim # 이 리소스가 PersistentVolumeClaim임을 명시 #관련 사담 : 꿈을 꿨는데 PVC라는 주식이 만원까지 올랐음.
metadata:
  name: postgres-pvc-postgres-0 # PersistentVolumeClaim의 이름 지정
spec:
  accessModes:
    - ReadWriteMany # 여러 노드에서 읽기/쓰기 가능하도록 설정
  storageClassName: efs-sc # EFS 스토리지 클래스 사용
  resources:
    requests:
      storage: 1Gi # 1 기가바이트의 스토리지 요청
#PV와 PVC는 도서관과 도서보관신청서 ..? PV는 관리자가 준비하고 관리하며 이용자는 신청서를 작성하여 어느정도의 보관(공간 및 구성)을 명시하고 PV가 적정한 책장을 찾아 할당함 ..
#PV는 사용 가능한 저장 공간이고, PVC는 그 공간을 사용하기 위한 요청. 이 시스템을 통해 사용자는 복잡한 저장소 세부사항을 몰라도 필요한 저장 공간을 쉽게 사용할수 있게함.. 우리는 도서관 전체를 요청..
