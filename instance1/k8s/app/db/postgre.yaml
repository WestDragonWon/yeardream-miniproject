---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: efs-sc
provisioner: efs.csi.aws.com
parameters:
  provisioningMode: efs-ap
  fileSystemId: fs-00fb81d888c7ed27c
  directoryPerms: "700"
  gidRangeStart: "1000"
  gidRangeEnd: "2000"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
data:
  postgresql.conf: |
    listen_addresses = '*'
    max_connections = 100
    shared_buffers = 128MB
    wal_level = replica
    max_wal_senders = 10
    hot_standby = on
  pg_hba.conf: |
    local all all trust
    host all all all md5
    host replication all all md5
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  serviceName: "postgres"
  replicas: 2
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:13
        env:
        - name: POSTGRES_DB
          value: mlops
        - name: POSTGRES_USER
          value: mlops_user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db
              key: POSTGRES_PASSWORD
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: postgres-config
          mountPath: /etc/postgresql/postgresql.conf
          subPath: postgresql.conf
        - name: postgres-config
          mountPath: /etc/postgresql/pg_hba.conf
          subPath: pg_hba.conf
        command:
        - bash
        - "-c"
        - |
          if [ "$(hostname)" == "postgres-0" ]; then
            exec docker-entrypoint.sh postgres
          else
            until pg_isready -h postgres-0.postgres; do
              echo "Waiting for primary"
              sleep 2
            done
            pg_basebackup -h postgres-0.postgres -D $PGDATA -P -U mlops_user
            echo "standby_mode = 'on'" >> $PGDATA/postgresql.auto.conf
            echo "primary_conninfo = 'host=postgres-0.postgres user=mlops_user password=$POSTGRES_PASSWORD'" >> $PGDATA/postgresql.auto.conf
            touch $PGDATA/standby.signal
            exec postgres
          fi
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: ["ReadWriteMany"]
      storageClassName: efs-sc
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
  clusterIP: None