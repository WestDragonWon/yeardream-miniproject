apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-worker
spec:
  replicas: 2  # 워커 복제본 수 설정
  selector:
    matchLabels:
      app: airflow-worker
  template:
    metadata:
      labels:
        app: airflow-worker
    spec:
      nodeSelector:
        type: worker  # worker 노드에만 배포
      containers:
        - name: airflow-worker
          image: apache/airflow:2.9.3-python3.8
          command: ["airflow", "celery", "worker"]
          env:
            - name: AIRFLOW__CELERY__BROKER_CONNECTION_RETRY_ON_STARTUP
              value: "True"
            - name: AIRFLOW__CORE__EXECUTOR
              valueFrom:
                configMapKeyRef:
                  name: airflow-config
                  key: AIRFLOW__CORE__EXECUTOR
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              valueFrom:
                configMapKeyRef:
                  name: airflow-config
                  key: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
            - name: AIRFLOW__CELERY__BROKER_URL
              valueFrom:
                configMapKeyRef:
                  name: airflow-config
                  key: AIRFLOW__CELERY__BROKER_URL
            - name: AIRFLOW__CELERY__RESULT_BACKEND
              valueFrom:
                configMapKeyRef:
                  name: airflow-config
                  key: AIRFLOW__CELERY__RESULT_BACKEND
          volumeMounts:
            - name: airflow-pvc
              mountPath: /opt/airflow/logs  # pod 경로
              subPath: logs  # efs 하위 폴더 생성
            - name: airflow-pvc
              mountPath: /opt/airflow/dags  # pod 경로
              subPath: dags  # efs 하위 폴더 생성
      volumes:
        - name: airflow-pvc
          persistentVolumeClaim:
            claimName: airflow-pvc
