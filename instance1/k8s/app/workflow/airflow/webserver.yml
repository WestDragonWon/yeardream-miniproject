apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-webserver
  template:
    metadata:
      labels:
        app: airflow-webserver
    spec:
      nodeSelector:
        type: worker  # worker 노드에만 배포
      initContainers:
        - name: initialize-airflow-db
          image: apache/airflow:2.9.3-python3.8
          command: ["airflow", "db", "init"]  # 데이터베이스 초기화
          env:
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              value: "postgresql+psycopg2://airflow:airflow@postgres:5432/airflow"
      containers:
        - name: airflow-webserver
          image: apache/airflow:2.9.3-python3.8
          ports:
            - containerPort: 8080
          command: ["/bin/bash", "-c", "airflow webserver"]
          env:
            - name: AIRFLOW__CORE__EXECUTOR
              value: "CeleryExecutor"
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              value: "postgresql+psycopg2://airflow:airflow@postgres:5432/airflow"
            - name: AIRFLOW__CELERY__RESULT_BACKEND
              value: "db+postgresql://airflow:airflow@postgres:5432/airflow"
            - name: AIRFLOW__CELERY__BROKER_URL
              value: "redis://redis-cluster:6379/0"
            - name: AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK
              value: "true"
            - name: AIRFLOW__CORE__LOAD_EXAMPLES
              value: "false"
          volumeMounts:
            - name: airflow-pvc
              mountPath: /opt/airflow/logs # pod 경로
              subPath: logs # efs 하위 폴더 생성
            - name: airflow-pvc
              mountPath: /opt/airflow/dags # pod 경로
              subPath: dags # efs 하위 폴더 생성
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 5
      volumes:
        - name: airflow-pvc
          persistentVolumeClaim:
            claimName: airflow-pvc 
---
apiVersion: v1
kind: Service
metadata:
  name: airflow-webserver
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30091
  selector:
    app: airflow-webserver
