apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mlflow
  template:
    metadata:
      labels:
        app: mlflow
    spec:
      containers:
        - name: mlflow
          image: bitnami/mlflow:latest
          ports:
            - containerPort: 8080  
          command: ["mlflow", "server", 
                    "--backend-store-uri", "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres:5432/mlops",  # PostgreSQL URI
                    "--default-artifact-root", "$(MLFLOW_S3_ARTIFACT_ROOT)",  # S3 버킷 경로
                    "--host", "0.0.0.0", 
                    "--port", "8080"]  # MLflow 서버 실행
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: system
                  key: POSTGRES_USER  # PostgreSQL 사용자
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: system
                  key: POSTGRES_PASSWORD  # PostgreSQL 비밀번호
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: system
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: system
                  key: AWS_SECRET_ACCESS_KEY
            - name: MLFLOW_S3_ARTIFACT_ROOT
              valueFrom:
                secretKeyRef:
                  name: system
                  key: MLFLOW_S3_ARTIFACT_ROOT
          resources:
            requests:
              memory: "512Mi"  # 요청 메모리
              cpu: "500m"      # 요청 CPU
            limits:
              memory: "1Gi"    # 제한 메모리
              cpu: "1"         # 제한 CPU

---
apiVersion: v1
kind: Service
metadata:
  name: mlflow
spec:
  type: NodePort  # LoadBalancer에서 NodePort로 변경
  ports:
    - port: 8080    # 추가된 port 필드
      targetPort: 8080
      nodePort: 30003  # 원하는 포트 번호 (30000~32767 사이)
  selector:
    app: mlflow
