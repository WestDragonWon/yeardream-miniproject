# Headless Service for Redis
apiVersion: v1
kind: Service
metadata:
  name: redis-headless
  labels:
    app: redis
spec:
  clusterIP: None # Headless Service 설정
  selector:
    app: redis
  ports:
  - name: redis-data-port # 클라이언트와의 데이터 통신용 포트
    port: 6379
    targetPort: 6379
  - name: redis-cluster-port # 클러스터 내부 통신용 포트
    port: 16379
    targetPort: 16379


---
# StatefulSet for Redis
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  labels:
    app: redis
spec:
  serviceName: "redis-headless" # StatefulSet과 연결될 Headless Service 이름
  replicas: 2 # Redis 인스턴스 수
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:6.2.6 # 사용할 Redis 이미지 버전
        ports:
        - containerPort: 6379 # Redis 기본 포트
        - containerPort: 16379 # 클러스터 포트
        volumeMounts:
        - name: redis-data
          mountPath: /data # Redis 데이터 경로
        command: ["redis-server"] # Redis 서버 실행 명령어
        args:
          - "--port 6379" # 포트 설정
          - "--cluster-enabled yes" # 클러스터 모드 활성화
          - "--cluster-config-file nodes.conf" # 클러스터 노드 설정 파일
          - "--cluster-node-timeout 5000" # 클러스터 노드 타임아웃 설정
          - "--appendonly yes" # 데이터 지속성 설정
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mlopsdb
              key: REDIS_PASSWORD
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-data # PVC 이름을 정의
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi # 요청하는 스토리지 크기
      storageClassName: ebs-gp3 # 동적 프로비저닝을 위한 StorageClass 이름
