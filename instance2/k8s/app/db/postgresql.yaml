apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  serviceName: "postgres"
  replicas: 2
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      securityContext:
        runAsUser: 999
        fsGroup: 999
      containers:
      - name: postgres
        image: postgres:15
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: mlops
        - name: POSTGRES_USER
          value: mlops_user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
          subPath: postgres
        - name: postgres-config
          mountPath: /etc/postgresql/postgresql.conf
          subPath: postgresql.conf
        - name: postgres-config
          mountPath: /etc/postgresql/pg_hba.conf
          subPath: pg_hba.conf
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1
            memory: 2Gi
        livenessProbe:
          exec:
            command: 
            - pg_isready
            - -U
            - mlops_user
            - -d
            - mlops
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command: 
            - pg_isready
            - -U
            - mlops_user
            - -d
            - mlops
          initialDelaySeconds: 5
          periodSeconds: 5
        command:
        - bash
        - "-c"
        - |
          if [[ $POD_NAME == postgres-0 ]]; then
            cp /etc/postgresql/postgresql.conf $PGDATA/
            cp /etc/postgresql/pg_hba.conf $PGDATA/
            exec docker-entrypoint.sh postgres -c config_file=$PGDATA/postgresql.conf
          else
            until pg_isready -h postgres-0.postgres; do
              echo "Waiting for postgres-0"
              sleep 2
            done
            pg_basebackup -h postgres-0.postgres -D $PGDATA -P -U replicator
            echo "standby_mode = 'on'" >> $PGDATA/postgresql.conf
            echo "primary_conninfo = 'host=postgres-0.postgres user=replicator password=$POSTGRES_PASSWORD application_name=$POD_NAME'" >> $PGDATA/postgresql.conf
            exec postgres -c config_file=$PGDATA/postgresql.conf
          fi
      volumes:
      - name: postgres-config
        configMap:
          name: postgres-config
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
      storageClassName: ebs-gp3
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  clusterIP: None
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
data:
  postgresql.conf: |
    listen_addresses = '*'
    wal_level = replica
    max_wal_senders = 10
    wal_keep_segments = 64
  pg_hba.conf: |
    local all all trust
    host all all all scram-sha-256
    host replication all all scram-sha-256
    host replication replicator 192.168.0.0/16 scram-sha-256